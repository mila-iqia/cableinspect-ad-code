# Copyright (C) 2022 Mila - Institut québécois d'intelligence artificielle
# SPDX-License-Identifier: Apache-2.0
dataset:
  name: hq
  format: hq
  task: segmentation # classification or segmentation
  toy: false
  train_batch_size: 32
  test_batch_size: 32
  num_workers: 5
  image_size: 224 # dimensions to which images are resized (mandatory)
  # center_crop: 224 # dimensions to which images are center-cropped after resizing (optional)
  normalization: imagenet # data distribution to which the images will be normalized: [none, imagenet]
  split_mode:
    name: kfold
    # Args for kfold split
    cable: C01 # options: [C01, C02, C03]
    # These are the anomaly_group_id options for each cable such that sampling num_train=100 and num_val=0 is feasible.
    # These were done manually by using visualize_splits notebook.
    # anomaly_group_id options for C1 are all possible integer in [0, 48].
    # anomaly_group_id options for C2 are all possible integer in [0, 53].
    # anomaly_group_id options for C3 are all possible integer in [0, 34] except [31].
    anomaly_group_id: 0
    num_train: 100
    num_val: 0
    buffer: 5
  transform_config:
    train: null
    val: null
  tiling:
    apply: false
    tile_size: null
    stride: null
    remove_border_count: 0
    use_random_tiling: false
    random_tile_count: 16

model:
  name: patchcore
  backbone: wide_resnet50_2 # resnet18
  pre_trained: true
  layers:
    - layer2
    - layer3
  coreset_sampling_ratio: 0.1
  num_neighbors: 9
  normalization_method: min_max # options: [null, min_max, cdf]

metrics:
  image:
    - F1Score
    - Precision
    - Recall
    - AUROC
    - AUPR
  threshold:
    method: adaptive #options: [adaptive, manual]
    manual_image: null
    manual_pixel: null
  fully_unsupervised: true

visualization:
  include: ["metrics"] # options: "metrics", "images"
  show_images: false # show images on the screen
  save_images: true # save images to the file system
  log_images: false # log images to the available loggers (if any)
  image_save_path: null # path to which images will be saved
  mode: full # options: ["full", "simple"]
  extra_threshold_points: false # Plot points to PR and ROC curve for thresholds [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9].

project:
  seed: 0
  experiment_name: "hq_kfold_unsupervised_cbl-C01_anomaly_group_id-0"
  # path: results # Folder to save the results # optional, to specify only if not specified as an argument to tools/train.py
  unique_dir: true
  save_predictions:
    image_scores: true
    pixel_scores: true

logging:
  logger: [csv] # options: [comet, tensorboard, wandb, csv] or combinations.
  log_graph: false # Logs the model graph to respective logger.

optimization:
  export_mode: null # options: onnx, openvino

# PL Trainer Args. Don't add extra parameter here.
trainer:
  enable_checkpointing: true
  default_root_dir: null
  gradient_clip_val: 0
  gradient_clip_algorithm: norm
  num_nodes: 1
  devices: 1
  enable_progress_bar: true
  overfit_batches: 0.0
  track_grad_norm: -1
  check_val_every_n_epoch: 1 # Don't validate before extracting features.
  fast_dev_run: false
  accumulate_grad_batches: 1
  max_epochs: 1
  min_epochs: null
  max_steps: -1
  min_steps: null
  max_time: null
  limit_train_batches: 1.0
  limit_val_batches: 1.0
  limit_test_batches: 1.0
  limit_predict_batches: 1.0
  val_check_interval: 1.0 # Don't validate before extracting features.
  log_every_n_steps: 50
  accelerator: auto # <"cpu", "gpu", "tpu", "ipu", "hpu", "auto">
  strategy: null
  sync_batchnorm: false
  precision: 32
  enable_model_summary: true
  num_sanity_val_steps: 0
  profiler: null
  benchmark: false
  deterministic: false
  reload_dataloaders_every_n_epochs: 0
  auto_lr_find: false
  replace_sampler_ddp: true
  detect_anomaly: false
  auto_scale_batch_size: false
  plugins: null
  move_metrics_to_cpu: false
  multiple_trainloader_mode: max_size_cycle
